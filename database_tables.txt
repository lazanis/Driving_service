# USEFUL LINKS
https://docs.sqlalchemy.org/en/14/orm/mapping_styles.html
https://docs.sqlalchemy.org/en/14/orm/mapping_styles.html#the-class-to-be-mapped
https://stackoverflow.com/questions/11530196/flask-sqlalchemy-query-specify-column-names - get specific columns from database
https://www.kite.com/python/answers/how-to-encrypt-a-password-in-python?fbclid=IwAR0YIO1iDpm8dLprJtOEInVOCVxaKoceLBOEHhxa9-OOEXeJy3RM3N2U0No - password encode
https://stackoverflow.com/questions/17325006/how-to-create-a-foreignkey-reference-with-sqlalchemy - foreign keys

# QUERIES
SELECT name, surname, type, seats FROM
USERS LEFT JOIN CARS ON USERS.id=CARS.user_id;

select OFFERS.id as offer_id, drive_from, drive_to, drive_date, OFFERS.user_id, type, seats FROM
OFFERS LEFT JOIN CARS on OFFERS.car_id=CARS.id;

select offer_id, drive_from, drive_to, drive_date, type, seats, name, surname, role, date_of_birth, username, email from
(select OFFERS.id as offer_id, drive_from, drive_to, drive_date, OFFERS.user_id, type, seats FROM
OFFERS LEFT JOIN CARS on OFFERS.car_id=CARS.id) as OFFER_CAR LEFT JOIN USERS ON OFFER_CAR.user_id = USERS.id;

# TABLES
Create table USERS
(
    id varchar(50) primary key,
    name varchar(50),
    surname varchar(50),
    role varchar(10),
    date_of_birth bigint,
    username varchar(50),
    pwd varchar(50),
    email varchar(50)
)

Create table CARS
(
    id varchar(50) primary key,
    user_id varchar(50),
    seats int,
    type varchar(50),
    foreign key (user_id) references USERS(id)
)

Create table OFFERS
(
    id varchar(50) primary key,
    drive_from varchar(50),
    drive_to varchar(50),
    drive_date bigint,
    user_id varchar(50),
    car_id varchar(50),
    request_type varchar(10),
    foreign key (user_id) references USERS(id),
    foreign key (car_id) references CARS(id)
)
